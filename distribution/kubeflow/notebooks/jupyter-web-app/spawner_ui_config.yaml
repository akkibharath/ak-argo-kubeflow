apiVersion: v1
kind: ConfigMap
metadata:
  name: config
data:
  spawner_ui_config.yaml: |
    spawnerFormDefaults:
      image:
        value: ghcr.io/haoxins/jupyter-scipy:0.2.1
        options:
          - ghcr.io/haoxins/jupyter-scipy:0.2.1
          - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-scipy:v1.0.64
          - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-pytorch-full:v1.0.62
          - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-pytorch-full-cuda:v1.0.62
          - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-tensorflow-full:v1.0.22
          - ghcr.io/pluralsh/kubeflow-notebooks-jupyter-tensorflow-full-cuda:v1.0.22
      imageGroupOne:
        value: ""
        options:
      imageGroupTwo:
        value: ""
        options:
      allowCustomImage: true
      imagePullPolicy:
        value: IfNotPresent
        readOnly: false
      cpu:
        value: '1'
        limitFactor: "1.2"
        readOnly: false
      memory:
        value: 2.0Gi
        limitFactor: "1.2"
        readOnly: false
      environment:
        value: {}
        readOnly: false
      workspaceVolume:
        value:
          type:
            value: New
          name:
            value: 'workspace-{notebook-name}'
          size:
            value: '5Gi'
          mountPath:
            value: /home/jovyan
          accessModes:
            value: ReadWriteOnce
          class:
            value: '{none}'
        readOnly: false
      dataVolumes:
        value: []
        # Each Data Volume is declared with the following attributes:
        # Type, Name, Size, MountPath and Access Mode
        #
        # For example, a list with 2 Data Volumes:
        # value:
        #   - value:
        #       type:
        #         value: New
        #       name:
        #         value: '{notebook-name}-vol-1'
        #       size:
        #         value: '10Gi'
        #       class:
        #         value: standard
        #       mountPath:
        #         value: /home/jovyan/vol-1
        #       accessModes:
        #         value: ReadWriteOnce
        #       class:
        #         value: {none}
        #   - value:
        #       type:
        #         value: New
        #       name:
        #         value: '{notebook-name}-vol-2'
        #       size:
        #         value: '10Gi'
        #       mountPath:
        #         value: /home/jovyan/vol-2
        #       accessModes:
        #         value: ReadWriteMany
        #       class:
        #         value: {none}
        readOnly: false
      gpus:
        value:
          num: "none"
          vendors:
            - limitsKey: "nvidia.com/gpu"
              uiName: "NVIDIA"
            - limitsKey: "amd.com/gpu"
              uiName: "AMD"
          vendor: ""
        readOnly: false
      affinityConfig:
        value: ""
        options: []
        #options:
        #  - configKey: "exclusive__n1-standard-2"
        #    displayName: "Exclusive: n1-standard-2"
        #    affinity:
        #      # (Require) Node having label: `node_pool=notebook-n1-standard-2`
        #      nodeAffinity:
        #        requiredDuringSchedulingIgnoredDuringExecution:
        #          nodeSelectorTerms:
        #            - matchExpressions:
        #                - key: "node_pool"
        #                  operator: "In"
        #                  values:
        #                   - "notebook-n1-standard-2"
        #      # (Require) Node WITHOUT existing Pod having label: `notebook-name`
        #      podAntiAffinity:
        #        requiredDuringSchedulingIgnoredDuringExecution:
        #          - labelSelector:
        #              matchExpressions:
        #                - key: "notebook-name"
        #                  operator: "Exists"
        #            namespaces: []
        #            topologyKey: "kubernetes.io/hostname"
        #readOnly: false
      tolerationGroup:
        value: ""
        options: []
        #options:
        #  - groupKey: "group_1"
        #    displayName: "Group 1: description"
        #    tolerations:
        #      - key: "key1"
        #        operator: "Equal"
        #        value: "value1"
        #        effect: "NoSchedule"
        #      - key: "key2"
        #        operator: "Equal"
        #        value: "value2"
        #        effect: "NoSchedule"
        readOnly: false
      shm:
        value: true
        readOnly: false
      configurations:
        value: []
    readOnly: false
